{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ksh\\\\final\\\\finalproject\\\\src\\\\routes\\\\Bar2.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false // label 숨기기\n\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        min: 0,\n        // 스케일에 대한 최솟갓 설정, 0 부터 시작\n        stepSize: 1 // 스케일에 대한 사용자 고정 정의 값\n\n      }\n    }]\n  },\n  maintainAspectRatio: false // false로 설정 시 사용자 정의 크기에 따라 그래프 크기가 결정됨.\n\n};\n\nconst Graph = _ref => {\n  let {\n    rankArr\n  } = _ref;\n  let calculatedArr = [0, 0, 0, 0, 0, 0, 0, 0];\n  rankArr.forEach(item => calculatedArr[item - 1]++);\n  let rankColor = [\"#11b288\", \"#207ac7\", \"#207ac7\", \"#207ac7\", \"#d6d6d6\", \"#d6d6d6\", \"#d6d6d6\", \"#d6d6d6\"];\n  const data = {\n    labels: ['#1', '#2', '#3', '#4', '#5', '#6', '#7', '#8'],\n    datasets: [{\n      backgroundColor: rankColor,\n      borderColor: rankColor,\n      borderWidth: 1,\n      hoverBackgroundColor: rankColor,\n      hoverBorderColor: rankColor,\n      data: calculatedArr\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data,\n    width: 300,\n    height: 200,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }, this);\n};\n\n_c = Graph;\nexport default Bar2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["C:/Ksh/final/finalproject/src/routes/Bar2.js"],"names":["React","Bar","options","legend","display","scales","yAxes","ticks","min","stepSize","maintainAspectRatio","Graph","rankArr","calculatedArr","forEach","item","rankColor","data","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","Bar2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,KADL,CACY;;AADZ,GADM;AAIdC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,CAAC;AACJC,MAAAA,KAAK,EAAE;AACHC,QAAAA,GAAG,EAAE,CADF;AACK;AACRC,QAAAA,QAAQ,EAAE,CAFP,CAEU;;AAFV;AADH,KAAD;AADH,GAJM;AAYdC,EAAAA,mBAAmB,EAAE,KAZP,CAYa;;AAZb,CAAhB;;AAgBA,MAAMC,KAAK,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAE7B,MAAIC,aAAa,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,CAApB;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgBC,IAAI,IAAIF,aAAa,CAACE,IAAI,GAAC,CAAN,CAAb,EAAxB;AACA,MAAIC,SAAS,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,CAAhB;AAEA,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA4C,IAA5C,CADC;AAETC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,eAAe,EAAEJ,SADnB;AAEEK,MAAAA,WAAW,EAAEL,SAFf;AAGEM,MAAAA,WAAW,EAAE,CAHf;AAIEC,MAAAA,oBAAoB,EAAEP,SAJxB;AAKEQ,MAAAA,gBAAgB,EAAER,SALpB;AAMEC,MAAAA,IAAI,EAAEJ;AANR,KADQ;AAFD,GAAb;AAcA,sBACQ,QAAC,GAAD;AACI,IAAA,IAAI,EAAEI,IADV;AAEI,IAAA,KAAK,EAAE,GAFX;AAGI,IAAA,MAAM,EAAE,GAHZ;AAII,IAAA,OAAO,EAAEf;AAJb;AAAA;AAAA;AAAA;AAAA,UADR;AAQD,CA5BD;;KAAMS,K;AA8BN,eAAec,IAAf","sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst options = {\r\n  legend: {\r\n      display: false, // label 숨기기\r\n  },\r\n  scales: {\r\n      yAxes: [{\r\n          ticks: { \r\n              min: 0, // 스케일에 대한 최솟갓 설정, 0 부터 시작\r\n              stepSize: 1, // 스케일에 대한 사용자 고정 정의 값\r\n          }\r\n      }]\r\n  },\r\n  maintainAspectRatio: false // false로 설정 시 사용자 정의 크기에 따라 그래프 크기가 결정됨.\r\n}\r\n\r\n\r\nconst Graph = ({ rankArr }) => {\r\n\r\n  let calculatedArr = [0,0,0,0,0,0,0,0]\r\n  rankArr.forEach(item => calculatedArr[item-1]++)\r\n  let rankColor = [\"#11b288\", \"#207ac7\", \"#207ac7\", \"#207ac7\", \"#d6d6d6\", \"#d6d6d6\", \"#d6d6d6\", \"#d6d6d6\"]\r\n\r\n  const data = {\r\n      labels: ['#1', '#2', '#3', '#4', '#5', '#6', '#7' , '#8'],\r\n      datasets: [\r\n        {\r\n          backgroundColor: rankColor,\r\n          borderColor: rankColor,\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: rankColor,\r\n          hoverBorderColor: rankColor,\r\n          data: calculatedArr\r\n        }\r\n      ]\r\n    }; \r\n\r\n  return (\r\n          <Bar \r\n              data={data}\r\n              width={300}\r\n              height={200}\r\n              options={options}\r\n          />\r\n  );\r\n};\r\n\r\nexport default Bar2;"]},"metadata":{},"sourceType":"module"}