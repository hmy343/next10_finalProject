{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ksh\\\\final\\\\finalproject\\\\src\\\\routes\\\\Treemap1.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { data } from 'Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Treemap(_ref) {\n  _s();\n\n  let {\n    data,\n    width,\n    height\n  } = _ref;\n  const svgRef = useRef(null);\n\n  function renderTreemap() {\n    const svg = d3.select(svgRef.current);\n    svg.attr('width', width).attr('height', height);\n    const root = d3.hierarchy(data).sum(d => d.value).sort((a, b) => b.value - a.value);\n    const treemapRoot = d3.treemap().size([width, height]).padding(1)(root);\n  }\n\n  useEffect(() => {\n    renderTreemap();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Treemap, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n\n_c = Treemap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Treemap\");","map":{"version":3,"sources":["C:/Ksh/final/finalproject/src/routes/Treemap1.js"],"names":["useRef","useEffect","d3","data","Treemap","width","height","svgRef","renderTreemap","svg","select","current","attr","root","hierarchy","sum","d","value","sort","a","b","treemapRoot","treemap","size","padding"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAAQC,IAAR,QAAmB,MAAnB;;AAEA,eAAe,SAASC,OAAT,OAA0C;AAAA;;AAAA,MAAzB;AAAED,IAAAA,IAAF;AAAQE,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAyB;AACvD,QAAMC,MAAM,GAAGP,MAAM,CAAC,IAAD,CAArB;;AAEA,WAASQ,aAAT,GAAyB;AACvB,UAAMC,GAAG,GAAGP,EAAE,CAACQ,MAAH,CAAUH,MAAM,CAACI,OAAjB,CAAZ;AAEAF,IAAAA,GAAG,CAACG,IAAJ,CAAS,OAAT,EAAkBP,KAAlB,EAAyBO,IAAzB,CAA8B,QAA9B,EAAwCN,MAAxC;AAEA,UAAMO,IAAI,GAAGX,EAAE,CACZY,SADU,CACAX,IADA,EAEVY,GAFU,CAELC,CAAD,IAAOA,CAAC,CAACC,KAFH,EAGVC,IAHU,CAGL,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACH,KAAF,GAAUE,CAAC,CAACF,KAHjB,CAAb;AAKA,UAAMI,WAAW,GAAGnB,EAAE,CAACoB,OAAH,GAAaC,IAAb,CAAkB,CAAClB,KAAD,EAAQC,MAAR,CAAlB,EAAmCkB,OAAnC,CAA2C,CAA3C,EAA8CX,IAA9C,CAApB;AACD;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACL,IAAD,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEI;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBuBH,O;;KAAAA,O","sourcesContent":["import { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport {data} from 'Data';\r\n\r\nexport default function Treemap({ data, width, height }) {\r\n  const svgRef = useRef(null);\r\n\r\n  function renderTreemap() {\r\n    const svg = d3.select(svgRef.current);\r\n\r\n    svg.attr('width', width).attr('height', height);\r\n\r\n    const root = d3\r\n      .hierarchy(data)\r\n      .sum((d) => d.value)\r\n      .sort((a, b) => b.value - a.value);\r\n\r\n    const treemapRoot = d3.treemap().size([width, height]).padding(1)(root);\r\n  }\r\n\r\n  useEffect(() => {\r\n    renderTreemap();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <svg ref={svgRef} />\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}